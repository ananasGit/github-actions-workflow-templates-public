on:
  workflow_call:
    inputs:
      webhook_url:
        type: string
        description: URL for webhook trigger
        required: true
      scanMetadataReportFile:
        type: string
        description: Location of the scanner metadata report file
        required: false
        default: .scannerwork/report-task.txt
      checkout_fetch_depth:
        type: number
        description: Fetch depth when checking out repository
        required: false
        default: 0

    secrets:
      sonar_host_url:
        description: SonarQube host url
        required: false
      sonar_token:
        description: Token for authorization with SonarQube
        required: true
      webhook_secret:
        description: Secret for webhook trigger
        required: true
#      sonar_root_cert:
#        description: Additional root cert
#        required: false


name: SonarQube Scan


jobs:
  sonar:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.checkout_fetch_depth }}

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: ${{ secrets.sonar_host_url }}

      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.sonar_token }}
          SONAR_HOST_URL: ${{ secrets.sonar_host_url }}
        with:
          scanMetadataReportFile: ${{ inputs.scanMetadataReportFile }}

  argowf-trigger:
    name: Argo Workflow Trigger
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - name: Trigger
        uses: distributhor/workflow-webhook@v2
        env:
          webhook_url: ${{ inputs.webhook_url }}/${{ github.event.repository.name }}
          webhook_secret: ${{ secrets.webhook_secret }}