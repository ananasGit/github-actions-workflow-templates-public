on:
  workflow_call:
    inputs:
      FULL_ECR_REPOSITORY:
        type: string
        description: ecr full repository
        required: true
      ECR_REPOSITORY:
        type: string
        description: ecr repository
        required: true
      ARGO_CD_REPO:
        type: string
        description: argo cd repo
        required: false
      ARGO_CD_FILE_TO_UPDATE:
        type: string
        description: argo cd file to update
        required: false
      PROMOTE_ORIGIN:
        type: string
        required: true
      PROMOTE_DESTINATION:
        type: string
        required: true
      IMAGE_NAME_TAG:
        type: string
        description: image name tag
        required: true
      ARGO_ORIGIN_CHECKOUT_FOLDER:
        type: string
        description: argo folder checkout
        required: true
      ARGO_DEST_CHECKOUT_FOLDER:
        type: string
        description: argo folder dest
        required: true

    secrets:
      AWS_REGION:
        description: aws region
        required: true
      AWS_ACCESS_KEY_ID:
        description: aws access key
        required: true
      AWS_SECRET_ACCESS_KEY:
        description: aws secret key
        required: true
      CHECKOUT_TOKEN:
        description: checkout token
        required: true

name: Promote QA to STAGE env

jobs:
  test_code_freeze:
    name: Verify Code freeze enabled
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: 'ananasGit/github-actions-workflow-templates-scripts'
          token: ${{ secrets.CHECKOUT_TOKEN }}
          path: 'workflow-scripts'
          fetch-depth: 1
      - name: Verify CODE FREEZE
        shell: bash
        continue-on-error: true
        run: |
          $GITHUB_WORKSPACE/workflow-scripts/promote-qa-stage/verify-code-freeze.sh

  get_commit_hash:
    name: Checkout QA to get commit hash on QA env
    needs: test_code_freeze
    runs-on: ubuntu-latest
    outputs:
      app_qa_commit_hash: ${{ steps.commit_hash.outputs.app_commit_hash }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/checkout@v3
        with:
          repository: 'ananasGit/github-actions-workflow-templates-scripts'
          token: ${{ secrets.CHECKOUT_TOKEN }}
          path: 'workflow-scripts'
          fetch-depth: 1

      - name: Checkout argoCD repo-qa
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.ARGO_CD_REPO }}
          token: ${{ secrets.CHECKOUT_TOKEN }}
          path: ${{ inputs.ARGO_ORIGIN_CHECKOUT_FOLDER }}
          ref: ${{ inputs.PROMOTE_ORIGIN }}

      - name: Extract commit hash
        shell: bash
        run: |
          echo "app_commit_hash=$(cat ${{ inputs.ARGO_ORIGIN_CHECKOUT_FOLDER }}/${{ inputs.ARGO_CD_FILE_TO_UPDATE }} | grep commit_hash | awk '{print $2}' )" >> $GITHUB_OUTPUT
        id: commit_hash

      - name: Show commit_hash
        shell: bash
        run: |
          echo ${{ steps.commit_hash.outputs.app_commit_hash }}

      - name: Checkout ArgoCD
        uses: actions/checkout@v3
        with:
          repository: ${{ inputs.ARGO_CD_REPO }}
          token: ${{ secrets.CHECKOUT_TOKEN }}
          path: argocd
          ref: ${{ inputs.PROMOTE_DESTINATION}}

      - name: Configure AWS credentials DEV
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create local changes
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
          IMAGE_NAME_TAG: ${{ inputs.IMAGE_NAME_TAG }}
          ARGO_CD_FILE_TO_UPDATE: ${{ inputs.ARGO_CD_FILE_TO_UPDATE }}
        run: |
          $GITHUB_WORKSPACE/workflow-scripts/promote-qa-stage/create-local-changes.sh

      - name: Commit files
        run: |
          $GITHUB_WORKSPACE/workflow-scripts/promote-qa-stage/commit-files.sh

      - name: Tag ms repo origin
        run: |
          $GITHUB_WORKSPACE/workflow-scripts/promote-qa-stage/tag-ms-repo-origin.sh

  promote:
    name: Pull & promote image from DEV to PROD ECR
    runs-on: ubuntu-latest
    needs: get_commit_hash
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/checkout@v3
        with:
          repository: 'ananasGit/github-actions-workflow-templates-scripts'
          token: ${{ secrets.CHECKOUT_TOKEN }}
          path: 'workflow-scripts'
          fetch-depth: 1

      - name: Configure AWS credentials DEV
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr-dev
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull image from Amazon ECR dev
        id: pull-image
        env:
          ECR_REGISTRY_DEV: ${{ steps.login-ecr-dev.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
          IMAGE_TAG_DEV: ${{ inputs.IMAGE_NAME_TAG }}
          IMAGE_TAG: ${{needs.get_commit_hash.outputs.app_qa_commit_hash}}
        run: |
          $GITHUB_WORKSPACE/workflow-scripts/promote-qa-stage/promote-pull-image-from-qa-ecr.sh

      - name: Configure AWS credentials Prod
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR prod
        id: login-ecr-prod
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag, and push image to Amazon ECR prod
        id: push-image
        env:
          ECR_REGISTRY_PROD: ${{ steps.login-ecr-prod.outputs.registry }}
          ECR_REGISTRY_DEV: ${{ steps.login-ecr-dev.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ECR_REPOSITORY }}
          IMAGE_TAG_DEV: ${{ inputs.IMAGE_NAME_TAG }}
          IMAGE_TAG: ${{ inputs.IMAGE_NAME_TAG }}
        run: |
          $GITHUB_WORKSPACE/workflow-scripts/promote-qa-stage/promote-push-image-to-prod-ecr.sh
